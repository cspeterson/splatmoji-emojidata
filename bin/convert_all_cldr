#!/usr/bin/env bash

read -r -d '' help <<EOF
Downloads the latest CLDR from unicode (or uses a provided version), unpacks
it, and converts all of the emoji with their keywords (in all languages,
separately), into more readily-usable formats.

Usage:
  $(basename ${0}) [/path/to/cldr/core.zip] [/path/to/emoji-variation-sequences.txt]
EOF

trap early_exit SIGINT
early_exit() {
  echo
  echo
  echo "Temporary files may be left at '${temp_dir}'."
  exit $?
}

script_dir="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"

if [ "${1}" == '-h' ] || [ "${1}" == '--help' ]; then
  echo "${help}"
  exit 0
fi

# Setup temp work area
temp_dir=$(mktemp -d)
mkdir -p "${temp_dir}"
extract_dir="${temp_dir}/core"

# Get/use cldr zip
if [ -f "${1}" ]; then
  # If given a file, try to extract from/to those
  cldr_filepath="${1}"
else
  # Else go get the latest CLDR zip and use that
  cldr_filepath="${temp_dir}/core.zip"
  wget --output-document "${cldr_filepath}" "http://unicode.org/Public/cldr/latest/core.zip"
fi
unzip -d "${extract_dir}" "${cldr_filepath}"

# Get/use presentation sequences
if [ -f "${2}" ]; then
  # Use if given from local file
  presentations_filepath="${2}"
else
  # Else go get the latest from Unicode
  presentations_filepath="${temp_dir}/emoji-variation-sequences.txt"
  wget --output-document "${presentations_filepath} 'https://www.unicode.org/Public/emoji/latest/emoji-variation-sequences.txt'"
fi

annotations_base=()
for f in "${extract_dir}/common/annotations/"*.xml; do
  f=${f%.xml}
  f=${f##*/}
  annotations_base+=($f)
done

annotations_derived=()
for f in "${extract_dir}/common/annotationsDerived/"*.xml; do
  f=${f%.xml}
  f=${f##*/}
  annotations_derived+=($f)
done

for format in {json,tsv,yaml}; do
  mkdir -p "${script_dir}/../data/${format}"

  # Base annotations
  for lang in "${annotations_base[@]}"; do
    out=$(python3 "${script_dir}/converter.py" --failifempty --presentation-sequences ${presentations_filepath} --format "${format}" "${extract_dir}/common/annotations/${lang}.xml") && echo "${out}" > "${script_dir}/../data/${format}/${lang}.base.${format}"
  done
  # Derived annotations only
  for lang in "${annotations_derived[@]}"; do
    out=$(python3 "${script_dir}/converter.py" --failifempty --presentation-sequences ${presentations_filepath} --format "${format}" "${extract_dir}/common/annotationsDerived/${lang}.xml") && echo "${out}" > "${script_dir}/../data/${format}/${lang}.derived.${format}"
  done
  # Combined base and derived annotations
  for lang in "${annotations_derived[@]}"; do
    out=$(python3 "${script_dir}/converter.py" --failifempty --presentation-sequences ${presentations_filepath} --format "${format}" "${extract_dir}/common/annotationsDerived/${lang}.xml" "${extract_dir}/common/annotations/${lang}.xml") && echo "${out}" > "${script_dir}/../data/${format}/${lang}.all.${format}"
  done
done

echo "Done! Temporary files left at '${temp_dir}'."
